# Generated by Django 5.2.1 on 2025-05-10 11:48

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="AdStatus",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=50, unique=True, verbose_name="название статуса"
                    ),
                ),
            ],
            options={
                "verbose_name": "статус объявления",
                "verbose_name_plural": "статусы объявлений",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Animal",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="Может быть пустым, если неизвестно",
                        max_length=100,
                        null=True,
                        verbose_name="имя/кличка",
                    ),
                ),
                (
                    "birth_date",
                    models.DateField(
                        blank=True,
                        help_text="Примерная, если точная неизвестна",
                        null=True,
                        verbose_name="дата рождения",
                    ),
                ),
            ],
            options={
                "verbose_name": "животное",
                "verbose_name_plural": "животные",
                "ordering": ["species", "name"],
            },
        ),
        migrations.CreateModel(
            name="Breed",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=100, verbose_name="название породы"),
                ),
            ],
            options={
                "verbose_name": "порода",
                "verbose_name_plural": "породы",
                "ordering": ["species", "name"],
            },
        ),
        migrations.CreateModel(
            name="Region",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=100, unique=True, verbose_name="название региона"
                    ),
                ),
            ],
            options={
                "verbose_name": "регион",
                "verbose_name_plural": "регионы",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Role",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=50, unique=True, verbose_name="название роли"
                    ),
                ),
            ],
            options={
                "verbose_name": "роль",
                "verbose_name_plural": "роли",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Species",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=100, unique=True, verbose_name="название вида"
                    ),
                ),
            ],
            options={
                "verbose_name": "вид животного",
                "verbose_name_plural": "виды животных",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "display_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="отображаемое имя"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=254, unique=True, verbose_name="email"
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
                (
                    "region",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="siteapp.region",
                        verbose_name="регион",
                    ),
                ),
                (
                    "role",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="siteapp.role",
                        verbose_name="роль",
                    ),
                ),
            ],
            options={
                "verbose_name": "пользователь",
                "verbose_name_plural": "пользователи",
                "ordering": ["email"],
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Advertisement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        default="Потеряно/Найдено животное",
                        max_length=200,
                        verbose_name="заголовок объявления",
                    ),
                ),
                ("description", models.TextField(verbose_name="описание")),
                (
                    "publication_date",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="дата размещения"
                    ),
                ),
                (
                    "latitude",
                    models.FloatField(blank=True, null=True, verbose_name="широта"),
                ),
                (
                    "longitude",
                    models.FloatField(blank=True, null=True, verbose_name="долгота"),
                ),
                (
                    "status",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="siteapp.adstatus",
                        verbose_name="статус",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="пользователь",
                    ),
                ),
                (
                    "animal",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="siteapp.animal",
                        verbose_name="животное",
                    ),
                ),
            ],
            options={
                "verbose_name": "объявление",
                "verbose_name_plural": "объявления",
                "ordering": ["-publication_date"],
            },
        ),
        migrations.CreateModel(
            name="AdResponse",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("message", models.TextField(verbose_name="сообщение")),
                (
                    "date_created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="дата отклика"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="пользователь",
                    ),
                ),
                (
                    "advertisement",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="responses",
                        to="siteapp.advertisement",
                        verbose_name="объявление",
                    ),
                ),
            ],
            options={
                "verbose_name": "отклик на объявление",
                "verbose_name_plural": "отклики на объявления",
                "ordering": ["-date_created"],
            },
        ),
        migrations.CreateModel(
            name="AdPhoto",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        upload_to="ad_photos/%Y/%m/%d/", verbose_name="фото"
                    ),
                ),
                (
                    "advertisement",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="photos",
                        to="siteapp.advertisement",
                        verbose_name="объявление",
                    ),
                ),
            ],
            options={
                "verbose_name": "фото объявления",
                "verbose_name_plural": "фото объявлений",
                "ordering": ["advertisement"],
            },
        ),
        migrations.CreateModel(
            name="Article",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(max_length=255, verbose_name="заголовок статьи"),
                ),
                ("content", models.TextField(verbose_name="содержимое")),
                (
                    "publication_date",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="дата публикации"
                    ),
                ),
                (
                    "author",
                    models.ForeignKey(
                        blank=True,
                        limit_choices_to={"is_staff": True},
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="автор",
                    ),
                ),
            ],
            options={
                "verbose_name": "статья",
                "verbose_name_plural": "статьи",
                "ordering": ["-publication_date"],
            },
        ),
        migrations.AddField(
            model_name="animal",
            name="breed",
            field=models.ForeignKey(
                blank=True,
                help_text="Может быть пустым для беспородных или если порода неизвестна",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="siteapp.breed",
                verbose_name="порода",
            ),
        ),
        migrations.CreateModel(
            name="Comment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("text", models.TextField(verbose_name="текст комментария")),
                (
                    "date_created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="дата комментария"
                    ),
                ),
                (
                    "article",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to="siteapp.article",
                        verbose_name="статья",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="пользователь",
                    ),
                ),
            ],
            options={
                "verbose_name": "комментарий",
                "verbose_name_plural": "комментарии",
                "ordering": ["-date_created"],
            },
        ),
        migrations.CreateModel(
            name="Shelter",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=200, verbose_name="название приюта"),
                ),
                ("address", models.CharField(max_length=255, verbose_name="адрес")),
                ("contacts", models.TextField(blank=True, verbose_name="контакты")),
                (
                    "region",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="siteapp.region",
                        verbose_name="регион",
                    ),
                ),
            ],
            options={
                "verbose_name": "приют",
                "verbose_name_plural": "приюты",
                "ordering": ["name"],
            },
        ),
        migrations.AddField(
            model_name="breed",
            name="species",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="siteapp.species",
                verbose_name="вид",
            ),
        ),
        migrations.AddField(
            model_name="animal",
            name="species",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                to="siteapp.species",
                verbose_name="вид",
            ),
        ),
        migrations.CreateModel(
            name="AnimalInShelter",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "date_admitted",
                    models.DateField(
                        auto_now_add=True, null=True, verbose_name="дата поступления"
                    ),
                ),
                (
                    "animal",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="siteapp.animal",
                        verbose_name="животное",
                    ),
                ),
                (
                    "shelter",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="siteapp.shelter",
                        verbose_name="приют",
                    ),
                ),
            ],
            options={
                "verbose_name": "животное в приюте",
                "verbose_name_plural": "животные в приютах",
                "ordering": ["shelter", "animal"],
                "unique_together": {("animal", "shelter")},
            },
        ),
        migrations.AlterUniqueTogether(
            name="breed",
            unique_together={("name", "species")},
        ),
        migrations.CreateModel(
            name="Volunteering",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "start_date",
                    models.DateTimeField(verbose_name="дата и время начала"),
                ),
                (
                    "end_date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="дата и время окончания"
                    ),
                ),
                ("notes", models.TextField(blank=True, verbose_name="примечания")),
                (
                    "shelter",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="siteapp.shelter",
                        verbose_name="приют",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="волонтёр",
                    ),
                ),
            ],
            options={
                "verbose_name": "волонтёрство",
                "verbose_name_plural": "записи о волонтёрстве",
                "ordering": ["-start_date"],
                "unique_together": {("user", "shelter", "start_date")},
            },
        ),
    ]
